/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        
        Queue<TreeNode> q=new LinkedList<TreeNode>();
        List<List<Integer>> al=new ArrayList<List<Integer>>();
        if(root==null)
        {
            return al;
        }
        else
        {
            q.add(root);
            q.add(null);
            List<Integer> temp=new ArrayList<Integer>();

            while(q.size()>1)
            {

                TreeNode n=q.poll();
                if(n==null)
                {
                    al.add(temp);
                    temp=new ArrayList<Integer>();
                    q.add(null);
                }
                else
                {
                    temp.add(n.val);
                    if(n.left!=null)
                    {
                        q.add(n.left);
                    }

                    if(n.right!=null)
                    {
                        q.add(n.right);
                    }
                }
            }
        al.add(temp);
        }
    
    return al;
    }
}
